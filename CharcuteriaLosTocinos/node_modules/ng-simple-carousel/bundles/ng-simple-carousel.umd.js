(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ng-simple-carousel', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ng-simple-carousel'] = {}, global.ng.core, global.rxjs, global.rxjs.operators, global.ng.common));
}(this, (function (exports, core, rxjs, operators, common) { 'use strict';

    /**
     * Copyright 2020 Google LLC
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var NgSimpleCarouselComponent = /** @class */ (function () {
        function NgSimpleCarouselComponent() {
            this.objectFit = 'contain';
            // @Input() infinite = false;
            this.imgChange = new core.EventEmitter();
            this.activeIndex = 0;
            this.scroll$ = new rxjs.BehaviorSubject(false);
            this.destroy$ = new rxjs.Subject();
        }
        NgSimpleCarouselComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.controller.jump$.pipe(operators.takeUntil(this.destroy$)).subscribe(function (id) { return _this.jumpTo(id); });
            this.controller.action$.pipe(operators.takeUntil(this.destroy$)).subscribe(function (action) { return action === 'prev' ? _this.onPrev() : _this.onNext(); });
        };
        NgSimpleCarouselComponent.prototype.ngAfterViewInit = function () {
            this.initObserve();
            this.startObserve();
        };
        NgSimpleCarouselComponent.prototype.initObserve = function () {
            var _this = this;
            var rootEl = this.containerEl.nativeElement;
            var options = {
                root: rootEl,
                rootMargin: '0px -50%',
            };
            this.observer = new IntersectionObserver(function (entries, observer) {
                entries.forEach(function (entry) {
                    if (entry.isIntersecting) {
                        var activeId_1 = entry.target.id;
                        var newInd = _this.images.findIndex(function (img) { return img.id === activeId_1; });
                        _this.onImgChange(activeId_1, newInd);
                    }
                });
            }, options);
        };
        NgSimpleCarouselComponent.prototype.startObserve = function () {
            var _this = this;
            var rootEl = this.containerEl.nativeElement;
            Array.from(rootEl.children).forEach(function (img) { return _this.observer.observe(img); });
        };
        NgSimpleCarouselComponent.prototype.stopObserve = function () {
            this.observer.disconnect();
        };
        // Observer will call onImgChange()
        NgSimpleCarouselComponent.prototype.jumpTo = function (id) {
            var newInd = this.images.findIndex(function (img) { return img.id === id; });
            if (this.activeIndex === newInd) {
                return;
            }
            var rootEl = this.containerEl.nativeElement;
            rootEl.scrollTo({
                top: 0,
                left: rootEl.offsetWidth * newInd,
                behavior: 'smooth'
            });
        };
        NgSimpleCarouselComponent.prototype.onPrev = function () {
            var newId;
            if (this.activeIndex - 1 >= 0) {
                newId = this.images[this.activeIndex - 1].id;
            }
            // if (this.infinite && this.activeIndex - 1 < 0) { newId = this.images[this.images.length - 1].id; }
            if (newId) {
                this.jumpTo(newId);
            }
        };
        NgSimpleCarouselComponent.prototype.onNext = function () {
            var newId;
            if (this.activeIndex + 1 < this.images.length) {
                newId = this.images[this.activeIndex + 1].id;
            }
            // if (this.infinite && this.activeIndex + 1 > this.images.length - 1) { newId = this.images[0].id; }
            if (newId) {
                this.jumpTo(newId);
            }
        };
        NgSimpleCarouselComponent.prototype.onImgChange = function (id, index) {
            if (this.activeIndex === index) {
                return;
            }
            this.activeIndex = index;
            this.imgChange.emit(id);
        };
        NgSimpleCarouselComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
            this.stopObserve();
        };
        return NgSimpleCarouselComponent;
    }());
    NgSimpleCarouselComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ng-simple-carousel',
                    template: "<!--\n Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<div class=\"ng-simple-carousel\" #container>\n  <div class=\"img_wrap\" *ngFor=\"let img of images; let i = index\" [id]=\"img.id\">\n    <picture>\n      <source *ngFor=\"let source of img?.sources\" [srcset]=\"source.srcset\" [type]=\"source.type\" [sizes]=\"source.sizes\">\n      <img class=\"img\" [class.activeImg]=\"i === activeIndex\" [class.prev]=\"i === activeIndex - 1\"\n        [class.next]=\"i === activeIndex + 1\" [src]=\"img.src\" [style.object-fit]=\"objectFit\" [srcset]=\"img.srcset\"\n        [alt]=\"img.alt\" [sizes]=\"img.sizes\" #image>\n    </picture>\n  </div>\n</div>\n",
                    styles: [".ng-simple-carousel{max-width:100%;width:100%;height:100%;overflow-x:scroll;overflow-y:hidden;scroll-snap-type:x mandatory;display:flex;align-items:center;flex-flow:row nowrap;-ms-overflow-style:none;scrollbar-width:none}.ng-simple-carousel::-webkit-scrollbar{display:none}.img_wrap{flex-shrink:0;padding:0 1px}.img,.img_wrap{width:100%;height:100%}.img{scroll-snap-align:start;-o-object-fit:contain;object-fit:contain}"]
                },] }
    ];
    NgSimpleCarouselComponent.ctorParameters = function () { return []; };
    NgSimpleCarouselComponent.propDecorators = {
        containerEl: [{ type: core.ViewChild, args: ['container',] }],
        controller: [{ type: core.Input }],
        images: [{ type: core.Input }],
        objectFit: [{ type: core.Input }],
        imgChange: [{ type: core.Output }]
    };

    /**
     * Copyright 2020 Google LLC
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var CarouselController = /** @class */ (function () {
        function CarouselController() {
            this.jumpSub = new rxjs.Subject();
            this.jump$ = this.jumpSub.asObservable();
            this.actionSub = new rxjs.Subject();
            this.action$ = this.actionSub.asObservable();
        }
        CarouselController.prototype.jumpTo = function (id) {
            this.jumpSub.next(id);
        };
        CarouselController.prototype.prev = function () {
            this.actionSub.next('prev');
        };
        CarouselController.prototype.next = function () {
            this.actionSub.next('next');
        };
        return CarouselController;
    }());

    /**
     * Copyright 2020 Google LLC
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var NgSimpleCarouselWithButtonComponent = /** @class */ (function () {
        function NgSimpleCarouselWithButtonComponent() {
            // @Input() infinite = false;
            this.imgChange = new core.EventEmitter();
            this.isFirstImg = true;
            this.isLastImg = false;
        }
        NgSimpleCarouselWithButtonComponent.prototype.ngOnInit = function () {
        };
        NgSimpleCarouselWithButtonComponent.prototype.onPrev = function () {
            this.controller.prev();
        };
        NgSimpleCarouselWithButtonComponent.prototype.onNext = function () {
            this.controller.next();
        };
        NgSimpleCarouselWithButtonComponent.prototype.onImgChange = function (id) {
            if (id === this.images[0].id) {
                this.isFirstImg = true;
                this.isLastImg = false;
            }
            else if (id === this.images[this.images.length - 1].id) {
                this.isFirstImg = false;
                this.isLastImg = true;
            }
            else {
                this.isFirstImg = false;
                this.isLastImg = false;
            }
            this.imgChange.emit(id);
        };
        return NgSimpleCarouselWithButtonComponent;
    }());
    NgSimpleCarouselWithButtonComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ng-simple-carousel-with-button',
                    template: "<!--\n Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<div class=\"wrap\">\n  <ng-simple-carousel [images]=\"images\" [controller]=\"controller\" (imgChange)=\"onImgChange($event)\"\n    [objectFit]=\"objectFit\">\n  </ng-simple-carousel>\n  <button class=\"button left\" (click)=\"onPrev()\" *ngIf=\"!isFirstImg\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#3e3e3e\" width=\"30px\" height=\"30px\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" stroke=\"#616161\" /></svg>\n  </button>\n  <button class=\"button right\" (click)=\"onNext()\" *ngIf=\"!isLastImg\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#3e3e3e\" width=\"30px\" height=\"30px\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" stroke=\"#616161\" /></svg>\n  </button>\n</div>\n",
                    styles: [".wrap{position:relative;width:100%;height:100%}.button{border:none;border-radius:50%;width:30px;height:30px;background:hsla(0,0%,100%,.4117647058823529);position:absolute;top:calc(50% - 15px);padding:0;outline:none;cursor:pointer}.button.left{left:5px}.button.right{right:5px}"]
                },] }
    ];
    NgSimpleCarouselWithButtonComponent.ctorParameters = function () { return []; };
    NgSimpleCarouselWithButtonComponent.propDecorators = {
        controller: [{ type: core.Input }],
        images: [{ type: core.Input }],
        objectFit: [{ type: core.Input }],
        imgChange: [{ type: core.Output }]
    };

    /**
     * Copyright 2020 Google LLC
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var NgSimpleCarouselWithDotsComponent = /** @class */ (function () {
        function NgSimpleCarouselWithDotsComponent() {
            // @Input() infinite = false;
            this.imgChange = new core.EventEmitter();
        }
        NgSimpleCarouselWithDotsComponent.prototype.ngOnInit = function () {
            this.activeId = this.images[0].id;
        };
        NgSimpleCarouselWithDotsComponent.prototype.onImgChange = function (id) {
            this.activeId = id;
            this.imgChange.emit(id);
        };
        NgSimpleCarouselWithDotsComponent.prototype.onDotsClick = function (id) {
            this.controller.jumpTo(id);
        };
        return NgSimpleCarouselWithDotsComponent;
    }());
    NgSimpleCarouselWithDotsComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ng-simple-carousel-with-dots',
                    template: "<!--\n Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<div class=\"wrap\">\n  <ng-simple-carousel [images]=\"images\" [controller]=\"controller\" (imgChange)=\"onImgChange($event)\"\n    [objectFit]=\"objectFit\">\n  </ng-simple-carousel>\n  <div class=\"dots\">\n    <ng-container *ngFor=\"let image of images\">\n      <div class=\"dot\" (click)=\"onDotsClick(image.id)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"100%\" height=\"100%\">\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path *ngIf=\"image.id === activeId\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\" />\n          <path *ngIf=\"image.id !== activeId\"\n            d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n      </div>\n    </ng-container>\n  </div>\n</div>\n",
                    styles: [".wrap{position:relative;width:100%;height:100%}.dots{position:absolute;bottom:5px;display:flex;width:100%;justify-content:center}.dot{width:1rem;height:1rem;cursor:pointer}"]
                },] }
    ];
    NgSimpleCarouselWithDotsComponent.ctorParameters = function () { return []; };
    NgSimpleCarouselWithDotsComponent.propDecorators = {
        controller: [{ type: core.Input }],
        images: [{ type: core.Input }],
        objectFit: [{ type: core.Input }],
        imgChange: [{ type: core.Output }]
    };

    /**
     * Copyright 2020 Google LLC
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var NgSimpleCarouselModule = /** @class */ (function () {
        function NgSimpleCarouselModule() {
        }
        return NgSimpleCarouselModule;
    }());
    NgSimpleCarouselModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [NgSimpleCarouselComponent, NgSimpleCarouselWithButtonComponent, NgSimpleCarouselWithDotsComponent],
                    imports: [
                        common.CommonModule
                    ],
                    exports: [NgSimpleCarouselComponent, NgSimpleCarouselWithButtonComponent, NgSimpleCarouselWithDotsComponent]
                },] }
    ];

    /**
     * Copyright 2020 Google LLC
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CarouselController = CarouselController;
    exports.NgSimpleCarouselComponent = NgSimpleCarouselComponent;
    exports.NgSimpleCarouselModule = NgSimpleCarouselModule;
    exports.ɵa = NgSimpleCarouselWithButtonComponent;
    exports.ɵb = NgSimpleCarouselWithDotsComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-simple-carousel.umd.js.map
