import { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';
import { BehaviorSubject, Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { CommonModule } from '@angular/common';

/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class NgSimpleCarouselComponent {
    constructor() {
        this.objectFit = 'contain';
        // @Input() infinite = false;
        this.imgChange = new EventEmitter();
        this.activeIndex = 0;
        this.scroll$ = new BehaviorSubject(false);
        this.destroy$ = new Subject();
    }
    ngOnInit() {
        this.controller.jump$.pipe(takeUntil(this.destroy$)).subscribe(id => this.jumpTo(id));
        this.controller.action$.pipe(takeUntil(this.destroy$)).subscribe(action => action === 'prev' ? this.onPrev() : this.onNext());
    }
    ngAfterViewInit() {
        this.initObserve();
        this.startObserve();
    }
    initObserve() {
        const rootEl = this.containerEl.nativeElement;
        const options = {
            root: rootEl,
            rootMargin: '0px -50%',
        };
        this.observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const activeId = entry.target.id;
                    const newInd = this.images.findIndex(img => img.id === activeId);
                    this.onImgChange(activeId, newInd);
                }
            });
        }, options);
    }
    startObserve() {
        const rootEl = this.containerEl.nativeElement;
        Array.from(rootEl.children).forEach(img => this.observer.observe(img));
    }
    stopObserve() {
        this.observer.disconnect();
    }
    // Observer will call onImgChange()
    jumpTo(id) {
        const newInd = this.images.findIndex(img => img.id === id);
        if (this.activeIndex === newInd) {
            return;
        }
        const rootEl = this.containerEl.nativeElement;
        rootEl.scrollTo({
            top: 0,
            left: rootEl.offsetWidth * newInd,
            behavior: 'smooth'
        });
    }
    onPrev() {
        let newId;
        if (this.activeIndex - 1 >= 0) {
            newId = this.images[this.activeIndex - 1].id;
        }
        // if (this.infinite && this.activeIndex - 1 < 0) { newId = this.images[this.images.length - 1].id; }
        if (newId) {
            this.jumpTo(newId);
        }
    }
    onNext() {
        let newId;
        if (this.activeIndex + 1 < this.images.length) {
            newId = this.images[this.activeIndex + 1].id;
        }
        // if (this.infinite && this.activeIndex + 1 > this.images.length - 1) { newId = this.images[0].id; }
        if (newId) {
            this.jumpTo(newId);
        }
    }
    onImgChange(id, index) {
        if (this.activeIndex === index) {
            return;
        }
        this.activeIndex = index;
        this.imgChange.emit(id);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
        this.stopObserve();
    }
}
NgSimpleCarouselComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-simple-carousel',
                template: "<!--\n Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<div class=\"ng-simple-carousel\" #container>\n  <div class=\"img_wrap\" *ngFor=\"let img of images; let i = index\" [id]=\"img.id\">\n    <picture>\n      <source *ngFor=\"let source of img?.sources\" [srcset]=\"source.srcset\" [type]=\"source.type\" [sizes]=\"source.sizes\">\n      <img class=\"img\" [class.activeImg]=\"i === activeIndex\" [class.prev]=\"i === activeIndex - 1\"\n        [class.next]=\"i === activeIndex + 1\" [src]=\"img.src\" [style.object-fit]=\"objectFit\" [srcset]=\"img.srcset\"\n        [alt]=\"img.alt\" [sizes]=\"img.sizes\" #image>\n    </picture>\n  </div>\n</div>\n",
                styles: [".ng-simple-carousel{max-width:100%;width:100%;height:100%;overflow-x:scroll;overflow-y:hidden;scroll-snap-type:x mandatory;display:flex;align-items:center;flex-flow:row nowrap;-ms-overflow-style:none;scrollbar-width:none}.ng-simple-carousel::-webkit-scrollbar{display:none}.img_wrap{flex-shrink:0;padding:0 1px}.img,.img_wrap{width:100%;height:100%}.img{scroll-snap-align:start;-o-object-fit:contain;object-fit:contain}"]
            },] }
];
NgSimpleCarouselComponent.ctorParameters = () => [];
NgSimpleCarouselComponent.propDecorators = {
    containerEl: [{ type: ViewChild, args: ['container',] }],
    controller: [{ type: Input }],
    images: [{ type: Input }],
    objectFit: [{ type: Input }],
    imgChange: [{ type: Output }]
};

/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class CarouselController {
    constructor() {
        this.jumpSub = new Subject();
        this.jump$ = this.jumpSub.asObservable();
        this.actionSub = new Subject();
        this.action$ = this.actionSub.asObservable();
    }
    jumpTo(id) {
        this.jumpSub.next(id);
    }
    prev() {
        this.actionSub.next('prev');
    }
    next() {
        this.actionSub.next('next');
    }
}

/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class NgSimpleCarouselWithButtonComponent {
    constructor() {
        // @Input() infinite = false;
        this.imgChange = new EventEmitter();
        this.isFirstImg = true;
        this.isLastImg = false;
    }
    ngOnInit() {
    }
    onPrev() {
        this.controller.prev();
    }
    onNext() {
        this.controller.next();
    }
    onImgChange(id) {
        if (id === this.images[0].id) {
            this.isFirstImg = true;
            this.isLastImg = false;
        }
        else if (id === this.images[this.images.length - 1].id) {
            this.isFirstImg = false;
            this.isLastImg = true;
        }
        else {
            this.isFirstImg = false;
            this.isLastImg = false;
        }
        this.imgChange.emit(id);
    }
}
NgSimpleCarouselWithButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-simple-carousel-with-button',
                template: "<!--\n Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<div class=\"wrap\">\n  <ng-simple-carousel [images]=\"images\" [controller]=\"controller\" (imgChange)=\"onImgChange($event)\"\n    [objectFit]=\"objectFit\">\n  </ng-simple-carousel>\n  <button class=\"button left\" (click)=\"onPrev()\" *ngIf=\"!isFirstImg\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#3e3e3e\" width=\"30px\" height=\"30px\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" stroke=\"#616161\" /></svg>\n  </button>\n  <button class=\"button right\" (click)=\"onNext()\" *ngIf=\"!isLastImg\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#3e3e3e\" width=\"30px\" height=\"30px\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" stroke=\"#616161\" /></svg>\n  </button>\n</div>\n",
                styles: [".wrap{position:relative;width:100%;height:100%}.button{border:none;border-radius:50%;width:30px;height:30px;background:hsla(0,0%,100%,.4117647058823529);position:absolute;top:calc(50% - 15px);padding:0;outline:none;cursor:pointer}.button.left{left:5px}.button.right{right:5px}"]
            },] }
];
NgSimpleCarouselWithButtonComponent.ctorParameters = () => [];
NgSimpleCarouselWithButtonComponent.propDecorators = {
    controller: [{ type: Input }],
    images: [{ type: Input }],
    objectFit: [{ type: Input }],
    imgChange: [{ type: Output }]
};

/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class NgSimpleCarouselWithDotsComponent {
    constructor() {
        // @Input() infinite = false;
        this.imgChange = new EventEmitter();
    }
    ngOnInit() {
        this.activeId = this.images[0].id;
    }
    onImgChange(id) {
        this.activeId = id;
        this.imgChange.emit(id);
    }
    onDotsClick(id) {
        this.controller.jumpTo(id);
    }
}
NgSimpleCarouselWithDotsComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-simple-carousel-with-dots',
                template: "<!--\n Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<div class=\"wrap\">\n  <ng-simple-carousel [images]=\"images\" [controller]=\"controller\" (imgChange)=\"onImgChange($event)\"\n    [objectFit]=\"objectFit\">\n  </ng-simple-carousel>\n  <div class=\"dots\">\n    <ng-container *ngFor=\"let image of images\">\n      <div class=\"dot\" (click)=\"onDotsClick(image.id)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"100%\" height=\"100%\">\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path *ngIf=\"image.id === activeId\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z\" />\n          <path *ngIf=\"image.id !== activeId\"\n            d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n      </div>\n    </ng-container>\n  </div>\n</div>\n",
                styles: [".wrap{position:relative;width:100%;height:100%}.dots{position:absolute;bottom:5px;display:flex;width:100%;justify-content:center}.dot{width:1rem;height:1rem;cursor:pointer}"]
            },] }
];
NgSimpleCarouselWithDotsComponent.ctorParameters = () => [];
NgSimpleCarouselWithDotsComponent.propDecorators = {
    controller: [{ type: Input }],
    images: [{ type: Input }],
    objectFit: [{ type: Input }],
    imgChange: [{ type: Output }]
};

/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class NgSimpleCarouselModule {
}
NgSimpleCarouselModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgSimpleCarouselComponent, NgSimpleCarouselWithButtonComponent, NgSimpleCarouselWithDotsComponent],
                imports: [
                    CommonModule
                ],
                exports: [NgSimpleCarouselComponent, NgSimpleCarouselWithButtonComponent, NgSimpleCarouselWithDotsComponent]
            },] }
];

/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { CarouselController, NgSimpleCarouselComponent, NgSimpleCarouselModule, NgSimpleCarouselWithButtonComponent as ɵa, NgSimpleCarouselWithDotsComponent as ɵb };
//# sourceMappingURL=ng-simple-carousel.js.map
