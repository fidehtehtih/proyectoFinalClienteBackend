{"version":3,"sources":["../../../projects/ng-simple-carousel/src/lib/carousel.component.ts","../../../projects/ng-simple-carousel/src/lib/carousel.controller.ts","../../../projects/ng-simple-carousel/src/lib/with-button/with-button.component.ts","../../../projects/ng-simple-carousel/src/lib/with-dots/with-dots.component.ts","../../../projects/ng-simple-carousel/src/lib/carousel.module.ts"],"names":["NgSimpleCarouselComponent","this","objectFit","imgChange","EventEmitter","activeIndex","scroll$","BehaviorSubject","destroy$","Subject","prototype","ngOnInit","_this","controller","jump$","pipe","takeUntil","subscribe","id","jumpTo","action$","action","onPrev","onNext","ngAfterViewInit","initObserve","startObserve","options","root","containerEl","nativeElement","rootMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","activeId_1","target","newInd","images","findIndex","img","onImgChange","rootEl","Array","from","children","observe","stopObserve","disconnect","scrollTo","top","left","offsetWidth","behavior","newId","length","index","emit","ngOnDestroy","next","complete","Component","args","selector","template","ViewChild","Input","Output","CarouselController","jumpSub","asObservable","actionSub","prev","NgSimpleCarouselWithButtonComponent","isFirstImg","isLastImg","NgSimpleCarouselWithDotsComponent","activeId","onDotsClick","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CarouselController } from './carousel.controller';\n\nexport interface CarouselImage {\n  id: string;\n  src: string;\n  alt?: string;\n  /**\n   * [For Responsive Image]{@link https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images}\n   */\n  srcset?: string;\n  /**\n   * [For Responsive Image]{@link https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images}\n   */\n  sizes?: string;\n  sources?: CarouselImageSource[];\n}\n\n/**\n * [For source in picture element]{@link https://developer.mozilla.org/ja/docs/Web/HTML/Element/picture}\n */\nexport interface CarouselImageSource {\n  srcset: string;\n  type?: string;\n  sizes?: string;\n}\n\n@Component({\n  selector: 'ng-simple-carousel',\n  templateUrl: './carousel.html',\n  styleUrls: ['./carousel.scss']\n})\nexport class NgSimpleCarouselComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('container') containerEl: ElementRef;\n  @Input() controller: CarouselController;\n  @Input() images: CarouselImage[];\n  @Input() objectFit: 'contain' | 'cover' = 'contain';\n  // @Input() infinite = false;\n  @Output() imgChange: EventEmitter<string> = new EventEmitter();\n  activeIndex = 0;\n  observer: IntersectionObserver;\n  scroll$ = new BehaviorSubject(false);\n  destroy$ = new Subject<void>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.controller.jump$.pipe(takeUntil(this.destroy$)).subscribe(id => this.jumpTo(id));\n    this.controller.action$.pipe(takeUntil(this.destroy$)).subscribe(action => action === 'prev' ? this.onPrev() : this.onNext());\n  }\n\n  ngAfterViewInit() {\n    this.initObserve();\n    this.startObserve();\n  }\n\n  initObserve() {\n    const rootEl = this.containerEl.nativeElement as HTMLElement;\n    const options = {\n      root: rootEl,\n      rootMargin: '0px -50%',\n    };\n    this.observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const activeId = entry.target.id;\n          const newInd = this.images.findIndex(img => img.id === activeId)\n          this.onImgChange(activeId, newInd);\n        }\n      });\n    }, options);\n  }\n\n  startObserve() {\n    const rootEl = this.containerEl.nativeElement as HTMLElement;\n    Array.from(rootEl.children).forEach(img => this.observer.observe(img));\n  }\n\n  stopObserve() {\n    this.observer.disconnect();\n  }\n\n  // Observer will call onImgChange()\n  jumpTo(id: string) {\n    const newInd = this.images.findIndex(img => img.id === id);\n    if (this.activeIndex === newInd) { return; }\n    const rootEl = this.containerEl.nativeElement as HTMLElement;\n    rootEl.scrollTo({\n      top: 0,\n      left: rootEl.offsetWidth * newInd,\n      behavior: 'smooth'\n    });\n  }\n\n  onPrev() {\n    let newId;\n    if (this.activeIndex - 1 >= 0) { newId = this.images[this.activeIndex - 1].id; }\n    // if (this.infinite && this.activeIndex - 1 < 0) { newId = this.images[this.images.length - 1].id; }\n    if (newId) { this.jumpTo(newId); }\n  }\n\n  onNext() {\n    let newId;\n    if (this.activeIndex + 1 < this.images.length) { newId = this.images[this.activeIndex + 1].id; }\n    // if (this.infinite && this.activeIndex + 1 > this.images.length - 1) { newId = this.images[0].id; }\n    if (newId) { this.jumpTo(newId); }\n  }\n\n  onImgChange(id: string, index: number) {\n    if (this.activeIndex === index) { return; }\n    this.activeIndex = index;\n    this.imgChange.emit(id);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.stopObserve();\n  }\n\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Subject } from \"rxjs\";\n\nexport class CarouselController {\n  private jumpSub: Subject<string> = new Subject<string>();\n  jump$ = this.jumpSub.asObservable();\n  private actionSub: Subject<'prev' | 'next'> = new Subject<'prev' | 'next'>();\n  action$ = this.actionSub.asObservable();\n\n  constructor() {\n  }\n\n  jumpTo(id: string) {\n    this.jumpSub.next(id);\n  }\n\n  prev() {\n    this.actionSub.next('prev');\n  }\n\n  next() {\n    this.actionSub.next('next');\n  }\n\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CarouselImage } from './../carousel.component';\nimport { CarouselController } from './../carousel.controller';\n\n@Component({\n  selector: 'ng-simple-carousel-with-button',\n  templateUrl: './with-button.component.html',\n  styleUrls: ['./with-button.component.scss']\n})\nexport class NgSimpleCarouselWithButtonComponent implements OnInit {\n  @Input() controller: CarouselController;\n  @Input() images: CarouselImage[];\n  @Input() objectFit: 'contain' | 'cover';\n  // @Input() infinite = false;\n  @Output() imgChange: EventEmitter<string> = new EventEmitter();\n  isFirstImg = true;\n  isLastImg = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onPrev() {\n    this.controller.prev();\n  }\n\n  onNext() {\n    this.controller.next();\n  }\n\n  onImgChange(id: string) {\n    if (id === this.images[0].id) {\n      this.isFirstImg = true;\n      this.isLastImg = false;\n    } else if (id === this.images[this.images.length - 1].id) {\n      this.isFirstImg = false;\n      this.isLastImg = true;\n    } else {\n      this.isFirstImg = false;\n      this.isLastImg = false;\n    }\n    this.imgChange.emit(id);\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CarouselImage } from './../carousel.component';\nimport { CarouselController } from './../carousel.controller';\n\n@Component({\n  selector: 'ng-simple-carousel-with-dots',\n  templateUrl: './with-dots.component.html',\n  styleUrls: ['./with-dots.component.scss']\n})\nexport class NgSimpleCarouselWithDotsComponent implements OnInit {\n  @Input() controller: CarouselController;\n  @Input() images: CarouselImage[];\n  @Input() objectFit: 'contain' | 'cover';\n  // @Input() infinite = false;\n  @Output() imgChange: EventEmitter<string> = new EventEmitter();\n  activeId;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.activeId = this.images[0].id;\n  }\n\n  onImgChange(id: string) {\n    this.activeId = id;\n    this.imgChange.emit(id);\n  }\n\n  onDotsClick(id: string) {\n    this.controller.jumpTo(id);\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgSimpleCarouselComponent } from './carousel.component';\nimport { NgSimpleCarouselWithButtonComponent } from './with-button/with-button.component';\nimport { NgSimpleCarouselWithDotsComponent } from './with-dots/with-dots.component';\n\n@NgModule({\n  declarations: [NgSimpleCarouselComponent, NgSimpleCarouselWithButtonComponent, NgSimpleCarouselWithDotsComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgSimpleCarouselComponent, NgSimpleCarouselWithButtonComponent, NgSimpleCarouselWithDotsComponent]\n})\nexport class NgSimpleCarouselModule { }\n"]}