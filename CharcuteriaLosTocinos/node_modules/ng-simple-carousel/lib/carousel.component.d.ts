/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { BehaviorSubject, Subject } from 'rxjs';
import { CarouselController } from './carousel.controller';
export interface CarouselImage {
    id: string;
    src: string;
    alt?: string;
    /**
     * [For Responsive Image]{@link https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images}
     */
    srcset?: string;
    /**
     * [For Responsive Image]{@link https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images}
     */
    sizes?: string;
    sources?: CarouselImageSource[];
}
/**
 * [For source in picture element]{@link https://developer.mozilla.org/ja/docs/Web/HTML/Element/picture}
 */
export interface CarouselImageSource {
    srcset: string;
    type?: string;
    sizes?: string;
}
export declare class NgSimpleCarouselComponent implements OnInit, OnDestroy, AfterViewInit {
    containerEl: ElementRef;
    controller: CarouselController;
    images: CarouselImage[];
    objectFit: 'contain' | 'cover';
    imgChange: EventEmitter<string>;
    activeIndex: number;
    observer: IntersectionObserver;
    scroll$: BehaviorSubject<boolean>;
    destroy$: Subject<void>;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    initObserve(): void;
    startObserve(): void;
    stopObserve(): void;
    jumpTo(id: string): void;
    onPrev(): void;
    onNext(): void;
    onImgChange(id: string, index: number): void;
    ngOnDestroy(): void;
}
